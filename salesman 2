import numpy as np
from itertools import permutations

def total_cost(path, cost):
    return sum(cost[path[i]][path[i + 1]] for i in range(-1, len(path) - 1))

d_matrix = np.array([[0, 2, 9, 10], 
                     [1, 0, 6, 4], 
                     [15, 7, 0, 8], 
                     [6, 3, 12, 0]])
best_path, best_cost = None, float('inf')

for perm in permutations(range(len(d_matrix))):
    current_cost = total_cost(perm, d_matrix)
    if current_cost < best_cost:
        best_cost, best_path = current_cost, perm

print("Best Path:", best_path, "Cost:",best_cost)
